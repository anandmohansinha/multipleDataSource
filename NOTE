imp urls
===========
https://github.com/ekim197711/springboot-mysql-mongo-transaction





Issues:
=======
Failed to configure a DataSource
: 'url' attribute is not specified and no embedded datasource could be configured.
Reason: Failed to determine a suitable driver class

Solution:
---------
Since you have added both mongodb and data-jpa dependencies in your pom.xml file
, it was creating a dependency conflict like below

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

            OR
  If you added dependency in pom.xml file and does not provided any property related to database to create datasource.


--------------------------------------------------------------------------------------------------------
Problem 2:
==============
If you have two database configured in pom.xml and if you depends on auto configuration then you will get exception

 You will get exception Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.



--------------------------------------------------------------------------------------------------------




Problem 3:
=======
Parameter 1 of constructor in org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker
 required a single bean, but 3 were found:
 - firstDsProperties: defined by method 'firstDsProperties' in class path resource [com/java/jpa/config/FirstDataSource.class]
 - mongodbProperties: defined by method 'mongodbProperties' in class path resource [com/java/jpa/config/MongoDBDataSource.class]
 - spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties: defined in null


 Solution:
 --------

--------------------------------------------------------------------------------------------------------------

 Problem 4:
 ===========
 org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Integer]

 Solution 1:
 ----------
 change Integer id to ObjectId in Patient.java

    @Id
    Integer id;
     to

     @Id
     ObjectId id;


  Solution 2:
  ------------


---------------------------------------------------------------------------------------
Problem: 5
org.springframework.data.mapping.PropertyReferenceException: No property updateName found for type Patient!

in mongodb we have to write update query using Save() method
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Optional<Patient> patient = patientRepository.findById(id);
        Patient p = patient.get();
        p.setName(name);
        Patient savedPatient = patientRepository.save(p);
        return savedPatient;

 In Jpa we have to write update query using @Modify and @Query annotation

  @Modifying
     @Query("update Doctor d set d.name = ?1 where d.id = ?2")
     void setNameById(String name, int id);





-----------------------------------------------------------------------------------------
Problem: 6
javax.persistence.TransactionRequiredException: Executing an update/delete query